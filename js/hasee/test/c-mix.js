// Generated by CoffeeScript 1.8.0
(function() {
  var DeepThought, DeeperThought, PhilosopherMixin, earth, mixOf,
    __slice = [].slice,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  mixOf = function() {
    var Mixed, base, method, mixin, mixins, name, _i, _ref;
    base = arguments[0], mixins = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    Mixed = (function(_super) {
      __extends(Mixed, _super);

      function Mixed() {
        return Mixed.__super__.constructor.apply(this, arguments);
      }

      return Mixed;

    })(base);
    for (_i = mixins.length - 1; _i >= 0; _i += -1) {
      mixin = mixins[_i];
      _ref = mixin.prototype;
      for (name in _ref) {
        method = _ref[name];
        Mixed.prototype[name] = method;
      }
    }
    return Mixed;
  };

  DeepThought = (function() {
    function DeepThought() {}

    DeepThought.prototype.answer = function() {
      return 42;
    };

    return DeepThought;

  })();

  PhilosopherMixin = (function() {
    function PhilosopherMixin() {}

    PhilosopherMixin.prototype.pontificate = function() {
      console.log("hmm...");
      return this.wise = true;
    };

    return PhilosopherMixin;

  })();

  DeeperThought = (function(_super) {
    __extends(DeeperThought, _super);

    function DeeperThought() {
      return DeeperThought.__super__.constructor.apply(this, arguments);
    }

    DeeperThought.prototype.answer = function() {
      this.pontificate();
      return DeeperThought.__super__.answer.call(this);
    };

    return DeeperThought;

  })(mixOf(DeepThought, PhilosopherMixin));

  earth = new DeeperThought;

  earth.answer();

}).call(this);
